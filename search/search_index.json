{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MacScrape Web Analyzer","text":"<p>MacScrape is a powerful web analysis tool that crawls websites, extracts valuable information, and provides insightful analysis using AI technologies, specifically leveraging Claude 3.5 Sonnet.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Web Crawling: Efficiently crawl and extract data from websites</li> <li>AI-Powered Analysis: Leverage Claude 3.5 Sonnet for advanced content analysis</li> <li>Data Visualization: Generate interactive visualizations of analyzed data</li> <li>Customizable: Tailor the analysis process to your specific needs</li> <li>Asynchronous Processing: Handle multiple websites concurrently</li> </ul>"},{"location":"#system-architecture","title":"System Architecture","text":"<pre><code>graph TD\n    A[User Input] --&gt; B[Orchestrator]\n    B --&gt; C[Forager]\n    B --&gt; D[AI Regenerator]\n    C --&gt; E[Web Scraping]\n    D --&gt; F[Claude 3.5 Sonnet]\n    E --&gt; G[Data Organizer]\n    F --&gt; G\n    G --&gt; H[Data Visualization]\n    H --&gt; I[Results]\n</code></pre>"},{"location":"#quick-start","title":"Quick Start","text":"<pre><code># Install MacScrape\npip install mac-scrape\n\n# Run the analyzer\nmac-scrape analyze https://example.com\n</code></pre> <p>For more detailed information, check out our User Guide.</p>"},{"location":"#project-status","title":"Project Status","text":"<p>MacScrape is currently in active development. We're continuously adding new features and improving existing functionality. Check our Changelog for recent updates.</p>"},{"location":"#performance-metrics","title":"Performance Metrics","text":"<p>Here's a snapshot of MacScrape's performance:</p> Metric Value Average crawl speed 5 pages/second AI analysis time 2 seconds/page Concurrent connections Up to 50"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions! If you're interested in improving MacScrape, please see our Contributing Guide.</p>"},{"location":"#license","title":"License","text":"<p>MacScrape is released under the MIT License. See the LICENSE file for more details.</p>"},{"location":"changelog/","title":"Changelog","text":"<p>All notable changes to MacScrape will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#unreleased","title":"Unreleased","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>Integration with Claude 3.5 Sonnet for enhanced AI analysis</li> <li>Advanced data visualization capabilities with interactive dashboards</li> <li>Asynchronous web scraping for improved performance</li> <li>Customizable CSS themes for generated reports</li> </ul>"},{"location":"changelog/#changed","title":"Changed","text":"<ul> <li>Upgraded the core scraping engine for better compatibility with modern websites</li> <li>Improved error handling and logging throughout the application</li> </ul>"},{"location":"changelog/#deprecated","title":"Deprecated","text":"<ul> <li>Legacy output format options (will be removed in v2.0.0)</li> </ul>"},{"location":"changelog/#120-2024-07-01","title":"1.2.0 - 2024-07-01","text":""},{"location":"changelog/#added_1","title":"Added","text":"<ul> <li>Support for scraping JavaScript-rendered content</li> <li>New 'topic clustering' visualization option</li> <li>API endpoints for programmatic access to MacScrape functions</li> </ul>"},{"location":"changelog/#fixed","title":"Fixed","text":"<ul> <li>Issue with Unicode character handling in certain websites</li> <li>Memory leak in long-running scraping jobs</li> </ul>"},{"location":"changelog/#110-2024-06-15","title":"1.1.0 - 2024-06-15","text":""},{"location":"changelog/#added_2","title":"Added","text":"<ul> <li>Multi-language support for content analysis</li> <li>Export options for popular data formats (CSV, JSON, XML)</li> </ul>"},{"location":"changelog/#changed_1","title":"Changed","text":"<ul> <li>Improved accuracy of sentiment analysis algorithm</li> </ul>"},{"location":"changelog/#security","title":"Security","text":"<ul> <li>Updated dependencies to address potential vulnerabilities</li> </ul>"},{"location":"changelog/#100-2024-06-01","title":"1.0.0 - 2024-06-01","text":""},{"location":"changelog/#added_3","title":"Added","text":"<ul> <li>Initial release of MacScrape</li> <li>Basic web scraping functionality</li> <li>Simple text analysis features</li> <li>Command-line interface for easy usage</li> </ul>"},{"location":"faq/","title":"Frequently Asked Questions (FAQ)","text":""},{"location":"faq/#general-questions","title":"General Questions","text":""},{"location":"faq/#what-is-macscrape","title":"What is MacScrape?","text":"<p>MacScrape is a powerful web analysis tool that crawls websites, extracts valuable information, and provides insightful analysis using AI technologies, specifically leveraging Claude 3.5 Sonnet.</p>"},{"location":"faq/#who-is-macscrape-for","title":"Who is MacScrape for?","text":"<p>MacScrape is designed for researchers, marketers, data analysts, and anyone who needs to extract and analyze web content at scale.</p>"},{"location":"faq/#is-macscrape-free-to-use","title":"Is MacScrape free to use?","text":"<p>MacScrape is open-source and free to use. However, it relies on external AI services which may have associated costs.</p>"},{"location":"faq/#installation-and-setup","title":"Installation and Setup","text":""},{"location":"faq/#what-are-the-system-requirements-for-macscrape","title":"What are the system requirements for MacScrape?","text":"<ul> <li>Python 3.8 or higher</li> <li>4GB RAM (8GB recommended for large-scale crawling)</li> <li>1GB free disk space</li> </ul>"},{"location":"faq/#how-do-i-install-macscrape","title":"How do I install MacScrape?","text":"<p>You can install MacScrape using pip:</p> <pre><code>pip install mac-scrape\n</code></pre>"},{"location":"faq/#im-getting-an-error-during-installation-what-should-i-do","title":"I'm getting an error during installation. What should I do?","text":"<p>First, ensure you have the latest version of pip:</p> <pre><code>pip install --upgrade pip\n</code></pre> <p>If the issue persists, check our Troubleshooting Guide or open an issue on our GitHub repository.</p>"},{"location":"faq/#usage","title":"Usage","text":""},{"location":"faq/#how-do-i-start-analyzing-a-website","title":"How do I start analyzing a website?","text":"<p>Use the following command:</p> <pre><code>mac-scrape analyze https://example.com\n</code></pre>"},{"location":"faq/#can-i-analyze-multiple-websites-at-once","title":"Can I analyze multiple websites at once?","text":"<p>Yes, you can provide multiple URLs:</p> <pre><code>mac-scrape analyze https://example.com https://another-example.com\n</code></pre>"},{"location":"faq/#how-do-i-customize-the-analysis-depth","title":"How do I customize the analysis depth?","text":"<p>Use the <code>--depth</code> flag:</p> <pre><code>mac-scrape analyze --depth detailed https://example.com\n</code></pre>"},{"location":"faq/#what-output-formats-does-macscrape-support","title":"What output formats does MacScrape support?","text":"<p>MacScrape supports JSON and CSV output formats. Use the <code>--output</code> flag to specify:</p> <pre><code>mac-scrape analyze --output json https://example.com\n</code></pre>"},{"location":"faq/#ai-analysis","title":"AI Analysis","text":""},{"location":"faq/#what-ai-model-does-macscrape-use","title":"What AI model does MacScrape use?","text":"<p>MacScrape primarily uses Claude 3.5 Sonnet from Anthropic for advanced content analysis.</p>"},{"location":"faq/#can-i-use-my-own-ai-model-with-macscrape","title":"Can I use my own AI model with MacScrape?","text":"<p>Currently, MacScrape is optimized for Claude 3.5 Sonnet. Support for custom models may be added in future releases.</p>"},{"location":"faq/#how-accurate-is-the-ai-analysis","title":"How accurate is the AI analysis?","text":"<p>The AI analysis is highly accurate, but as with all AI systems, it's not infallible. We recommend using it as a powerful tool to assist human analysis, not replace it entirely.</p>"},{"location":"faq/#data-and-privacy","title":"Data and Privacy","text":""},{"location":"faq/#does-macscrape-store-the-web-pages-it-scrapes","title":"Does MacScrape store the web pages it scrapes?","text":"<p>By default, MacScrape does not store the full content of scraped web pages. It only stores the extracted and analyzed data.</p>"},{"location":"faq/#is-the-data-sent-to-ai-services-encrypted","title":"Is the data sent to AI services encrypted?","text":"<p>Yes, all communication with AI services is encrypted using HTTPS.</p>"},{"location":"faq/#how-can-i-ensure-im-using-macscrape-ethically","title":"How can I ensure I'm using MacScrape ethically?","text":"<p>Always respect websites' <code>robots.txt</code> files, terms of service, and use rate limiting to avoid overwhelming servers. Only scrape publicly available data and respect copyright laws.</p>"},{"location":"faq/#troubleshooting","title":"Troubleshooting","text":""},{"location":"faq/#macscrape-is-running-slowly-how-can-i-speed-it-up","title":"MacScrape is running slowly. How can I speed it up?","text":"<p>Try increasing the number of concurrent connections:</p> <pre><code>mac-scrape analyze --concurrent 20 https://example.com\n</code></pre> <p>Also, ensure you have a stable internet connection and consider upgrading your hardware if you're processing large amounts of data.</p>"},{"location":"faq/#im-getting-access-denied-errors-what-should-i-do","title":"I'm getting \"Access Denied\" errors. What should I do?","text":"<p>Some websites may block automated scraping. Try the following:</p> <ol> <li>Respect the website's <code>robots.txt</code> file</li> <li>Use a longer delay between requests</li> <li>Consider reaching out to the website owner for permission</li> </ol>"},{"location":"faq/#the-ai-analysis-seems-incorrect-or-incomplete-what-can-i-do","title":"The AI analysis seems incorrect or incomplete. What can I do?","text":"<p>Try using a more specific prompt:</p> <pre><code>mac-scrape analyze --prompt \"Analyze the main topics and sentiment\" https://example.com\n</code></pre> <p>If issues persist, please report them on our GitHub issue tracker.</p>"},{"location":"faq/#contributing","title":"Contributing","text":""},{"location":"faq/#how-can-i-contribute-to-macscrape","title":"How can I contribute to MacScrape?","text":"<p>We welcome contributions! Please see our Contributing Guide for details on how to submit pull requests, report bugs, or request features.</p>"},{"location":"faq/#i-found-a-bug-where-should-i-report-it","title":"I found a bug. Where should I report it?","text":"<p>Please report bugs on our GitHub Issues page. Include as much detail as possible to help us reproduce and fix the issue.</p>"},{"location":"faq/#support","title":"Support","text":""},{"location":"faq/#where-can-i-get-help-if-my-question-isnt-answered-here","title":"Where can I get help if my question isn't answered here?","text":"<p>You can:</p> <ol> <li>Check our Documentation</li> <li>Ask a question on our GitHub Discussions page</li> <li>Join our community chat on Discord</li> </ol>"},{"location":"faq/#how-often-is-macscrape-updated","title":"How often is MacScrape updated?","text":"<p>We aim to release updates monthly, with bug fixes and minor improvements released as needed. Check our Changelog for the latest updates.</p>"},{"location":"quick-start/","title":"Quick Start Guide","text":"<p>Get up and running with MacScrape in minutes!</p>"},{"location":"quick-start/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.8 or higher</li> <li>pip (Python package manager)</li> </ul>"},{"location":"quick-start/#installation","title":"Installation","text":"<p>Install MacScrape using pip:</p> <pre><code>pip install mac-scrape\n</code></pre>"},{"location":"quick-start/#basic-usage","title":"Basic Usage","text":""},{"location":"quick-start/#1-analyze-a-single-website","title":"1. Analyze a Single Website","text":"<pre><code>mac-scrape analyze https://example.com\n</code></pre> <p>This command will scrape the website, perform AI analysis, and generate a report.</p>"},{"location":"quick-start/#2-analyze-multiple-websites","title":"2. Analyze Multiple Websites","text":"<pre><code>mac-scrape analyze https://example.com https://another-example.com\n</code></pre>"},{"location":"quick-start/#3-customize-analysis-depth","title":"3. Customize Analysis Depth","text":"<pre><code>mac-scrape analyze --depth detailed https://example.com\n</code></pre> <p>Options: <code>basic</code>, <code>detailed</code>, <code>comprehensive</code></p>"},{"location":"quick-start/#4-specify-output-format","title":"4. Specify Output Format","text":"<pre><code>mac-scrape analyze --output json https://example.com\n</code></pre> <p>Options: <code>json</code>, <code>csv</code>, <code>html</code></p>"},{"location":"quick-start/#viewing-results","title":"Viewing Results","text":"<p>By default, MacScrape will display a summary in the console and save detailed results in the <code>output</code> directory.</p> <p>To view the interactive dashboard:</p> <pre><code>mac-scrape dashboard\n</code></pre> <p>This will open the dashboard in your default web browser.</p>"},{"location":"quick-start/#next-steps","title":"Next Steps","text":"<ul> <li>Explore advanced features in the User Guide</li> <li>Learn about customization options in the Configuration Guide</li> <li>Check out the API Reference for programmatic usage</li> </ul>"},{"location":"quick-start/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter any issues, please refer to our FAQ or open an issue on GitHub.</p>"},{"location":"api/ai-regenerator/","title":"AI Regenerator API Reference","text":"<p>The AI Regenerator module integrates Claude 3.5 Sonnet for advanced content analysis and generation in MacScrape.</p>"},{"location":"api/ai-regenerator/#class-airegenerator","title":"Class: AIRegenerator","text":""},{"location":"api/ai-regenerator/#initialization","title":"Initialization","text":"<pre><code>from ai_integration.ai_regenerator import AIRegenerator\n\nai_regenerator = AIRegenerator()\n</code></pre>"},{"location":"api/ai-regenerator/#methods","title":"Methods","text":""},{"location":"api/ai-regenerator/#async-analyze_contentdata-dict-prompt-optionalstr-none-dict","title":"async analyze_content(data: Dict, prompt: Optional[str] = None) -&gt; Dict","text":"<p>Analyzes the given content using AI models.</p> <p>Parameters:</p> <ul> <li><code>data</code>: Dictionary containing the content to analyze</li> <li><code>prompt</code>: Optional custom prompt for analysis</li> </ul> <p>Returns:</p> <ul> <li>A dictionary containing the AI analysis results</li> </ul> <pre><code>results = await ai_regenerator.analyze_content(\n    {\"url\": \"https://example.com\", \"content\": \"Example text...\"},\n    prompt=\"Summarize the main points and sentiment\"\n)\n</code></pre>"},{"location":"api/ai-regenerator/#generate_sitedata-dict-structure-dict-styles-dict-str","title":"generate_site(data: Dict, structure: Dict, styles: Dict) -&gt; str","text":"<p>Generates an HTML website based on the analyzed data.</p> <p>Parameters:</p> <ul> <li><code>data</code>: Analyzed data</li> <li><code>structure</code>: Website structure specification</li> <li><code>styles</code>: CSS styles for the website</li> </ul> <p>Returns:</p> <ul> <li>A string containing the generated HTML</li> </ul> <pre><code>html = ai_regenerator.generate_site(analyzed_data, site_structure, custom_styles)\n</code></pre>"},{"location":"api/ai-regenerator/#internal-workflow","title":"Internal Workflow","text":"<pre><code>    sequenceDiagram\n        participant Client\n        participant AIRegenerator\n        participant OpenAI\n        participant Anthropic\n\n        Client-&gt;&gt;AIRegenerator: analyze_content(data, prompt)\n        AIRegenerator-&gt;&gt;OpenAI: parse(prompt + content)\n        OpenAI--&gt;&gt;AIRegenerator: openai_result\n        AIRegenerator-&gt;&gt;Anthropic: parse(prompt + content)\n        Anthropic--&gt;&gt;AIRegenerator: anthropic_result\n        AIRegenerator-&gt;&gt;AIRegenerator: combine_results()\n        AIRegenerator--&gt;&gt;Client: combined_analysis\n</code></pre>"},{"location":"api/ai-regenerator/#ai-models","title":"AI Models","text":"<ol> <li> <p>OpenAI GPT Model</p> </li> <li> <p>Used for general text analysis and generation</p> </li> <li> <p>Provides diverse perspectives on content</p> </li> <li> <p>Anthropic Claude 3.5 Sonnet</p> </li> <li>Specialized in detailed content analysis</li> <li>Excels at summarization and insight extraction</li> </ol>"},{"location":"api/ai-regenerator/#prompt-engineering","title":"Prompt Engineering","text":"<p>Effective prompt engineering is crucial for obtaining high-quality results. Here are some tips:</p> <ol> <li>Be specific in your instructions</li> <li>Provide context about the content and desired output</li> <li>Use examples to guide the AI's response format</li> <li>Break complex tasks into smaller, manageable prompts</li> </ol> <p>Example prompt template:</p> <pre><code>    Analyze the following web content:\n    {content}\n\n    Please provide:\n    1. A concise summary (50 words max)\n    2. The main topic or theme\n    3. Three key points\n    4. Overall sentiment (positive, negative, or neutral)\n    5. Any notable statistics or data points\n</code></pre>"},{"location":"api/ai-regenerator/#error-handling","title":"Error Handling","text":"<ul> <li>API call failures are retried with exponential backoff</li> <li>Timeout errors are caught and logged</li> <li>Invalid or insufficient responses trigger fallback analysis methods</li> </ul>"},{"location":"api/ai-regenerator/#performance-optimization","title":"Performance Optimization","text":"<ul> <li>Implement caching for frequently analyzed content</li> <li>Use batch processing for multiple content pieces</li> <li>Adjust token limits based on content length and analysis depth</li> </ul>"},{"location":"api/ai-regenerator/#ethical-considerations","title":"Ethical Considerations","text":"<ul> <li>Implement content filtering to avoid processing sensitive or inappropriate material</li> <li>Clearly disclose AI usage in generated content</li> <li>Regularly audit AI outputs for bias and accuracy</li> </ul>"},{"location":"api/ai-regenerator/#example-custom-analysis-pipeline","title":"Example: Custom Analysis Pipeline","text":"<pre><code>    class CustomAIRegenerator(AIRegenerator):\n        async def custom_analysis(self, content):\n            # Implement custom analysis logic\n            pass\n\n        async def analyze_content(self, data, prompt=None):\n            results = await super().analyze_content(data, prompt)\n            results['custom_analysis'] = await self.custom_analysis(data['content'])\n            return results\n</code></pre>"},{"location":"api/ai-regenerator/#next-steps","title":"Next Steps","text":"<p>Explore how to integrate the AI Regenerator with the Orchestrator for a complete web analysis pipeline.</p>"},{"location":"api/forager/","title":"Forager API Reference","text":"<p>The Forager module is responsible for web scraping and data extraction in MacScrape.</p>"},{"location":"api/forager/#class-foragermodel","title":"Class: ForagerModel","text":""},{"location":"api/forager/#initialization","title":"Initialization","text":"<pre><code>from models.forager import ForagerModel\n\nforager = ForagerModel()\n</code></pre>"},{"location":"api/forager/#methods","title":"Methods","text":""},{"location":"api/forager/#async-sniff_dataurls-liststr-max_depth-int-2-dict","title":"async sniff_data(urls: List[str], max_depth: int = 2) -&gt; Dict","text":"<p>Crawls the given URLs and extracts data.</p> <p>Parameters:</p> <ul> <li><code>urls</code>: List of URLs to crawl</li> <li><code>max_depth</code>: Maximum depth for crawling (default: 2)</li> </ul> <p>Returns:</p> <ul> <li>A dictionary containing the extracted data for each URL</li> </ul> <pre><code>data = await forager.sniff_data([\"https://example.com\"], max_depth=3)\n</code></pre>"},{"location":"api/forager/#internal-methods","title":"Internal Methods","text":""},{"location":"api/forager/#async-_crawlurl-str-max_depth-int-current_depth-int-0-dict","title":"async _crawl(url: str, max_depth: int, current_depth: int = 0) -&gt; Dict","text":"<p>Recursive method to crawl a single URL and its links.</p>"},{"location":"api/forager/#_extract_headerssoup-beautifulsoup-dict","title":"_extract_headers(soup: BeautifulSoup) -&gt; Dict","text":"<p>Extracts header information from a BeautifulSoup object.</p>"},{"location":"api/forager/#_extract_linkssoup-beautifulsoup-base_url-str-listdict","title":"_extract_links(soup: BeautifulSoup, base_url: str) -&gt; List[Dict]","text":"<p>Extracts links from a BeautifulSoup object.</p>"},{"location":"api/forager/#crawling-process","title":"Crawling Process","text":"<pre><code>graph TD\n    A[Start] --&gt; B[Fetch URL]\n    B --&gt; C{Max Depth Reached?}\n    C --&gt;|Yes| D[Extract Data]\n    C --&gt;|No| E[Parse HTML]\n    E --&gt; F[Extract Links]\n    F --&gt; G{More Links?}\n    G --&gt;|Yes| H[Select Next Link]\n    H --&gt; B\n    G --&gt;|No| D\n    D --&gt; I[Return Data]\n    I --&gt; J[End]\n</code></pre>"},{"location":"api/forager/#configuration-options","title":"Configuration Options","text":"Option Description Default user_agent User agent string for requests \"MacScrape/1.0\" timeout Request timeout in seconds 30 respect_robots_txt Whether to respect robots.txt True max_retries Maximum number of retries for failed requests 3"},{"location":"api/forager/#error-handling","title":"Error Handling","text":"<ul> <li>Network errors are retried with exponential backoff</li> <li>Malformed HTML is handled gracefully, extracting whatever data is available</li> <li>Timeouts and access denied errors are logged and skipped</li> </ul>"},{"location":"api/forager/#best-practices","title":"Best Practices","text":"<ol> <li>Respect website terms of service and robots.txt</li> <li>Implement rate limiting to avoid overloading servers</li> <li>Use caching to reduce unnecessary requests</li> <li>Regularly update the user agent string</li> <li>Handle different content types (HTML, JSON, XML) appropriately</li> </ol>"},{"location":"api/forager/#example-custom-crawling-logic","title":"Example: Custom Crawling Logic","text":"<pre><code>class CustomForager(ForagerModel):\n    async def _extract_custom_data(self, soup):\n        # Implement custom data extraction logic\n        pass\n\n    async def _crawl(self, url, max_depth, current_depth=0):\n        data = await super()._crawl(url, max_depth, current_depth)\n        data['custom_data'] = await self._extract_custom_data(soup)\n        return data\n</code></pre>"},{"location":"api/forager/#next-steps","title":"Next Steps","text":"<p>Learn how to process and analyze the scraped data with the AI Regenerator API.</p>"},{"location":"api/orchestrator/","title":"Orchestrator API Reference","text":"<p>The Orchestrator is the central component of MacScrape that coordinates the web scraping, AI analysis, and data visualization processes.</p>"},{"location":"api/orchestrator/#class-orchestratormodel","title":"Class: OrchestratorModel","text":""},{"location":"api/orchestrator/#initialization","title":"Initialization","text":"<pre><code>from models.orchestrator import OrchestratorModel\n\norchestrator = OrchestratorModel()\n</code></pre>"},{"location":"api/orchestrator/#methods","title":"Methods","text":""},{"location":"api/orchestrator/#orchestrateurls-liststr-prompt-optionalstr-none-dict","title":"orchestrate(urls: List[str], prompt: Optional[str] = None) -&gt; Dict","text":"<p>Orchestrates the entire process of web scraping, analysis, and visualization.</p> <p>Parameters:</p> <ul> <li><code>urls</code>: List of URLs to analyze</li> <li><code>prompt</code>: Optional custom prompt for AI analysis</li> </ul> <p>Returns:</p> <ul> <li>A dictionary containing the analysis results and generated website content</li> </ul> <pre><code>results = await orchestrator.orchestrate([\"https://example.com\"], \"Analyze the main topics\")\n</code></pre>"},{"location":"api/orchestrator/#clear_cache-none","title":"clear_cache() -&gt; None","text":"<p>Clears the internal cache of the orchestrator.</p> <pre><code>orchestrator.clear_cache()\n</code></pre>"},{"location":"api/orchestrator/#update_user_stylesstyles-dict-none","title":"update_user_styles(styles: Dict) -&gt; None","text":"<p>Updates the user-defined styles for the generated website.</p> <p>Parameters:</p> <ul> <li><code>styles</code>: A dictionary containing CSS styles</li> </ul> <pre><code>orchestrator.update_user_styles({\n    \"body\": {\n        \"background-color\": \"#f0f0f0\",\n        \"font-family\": \"Arial, sans-serif\"\n    }\n})\n</code></pre>"},{"location":"api/orchestrator/#internal-workflow","title":"Internal Workflow","text":"<pre><code>sequenceDiagram\n    participant User\n    participant Orchestrator\n    participant Forager\n    participant AIRegenerator\n    participant Visualizer\n\n    User-&gt;&gt;Orchestrator: orchestrate(urls, prompt)\n    Orchestrator-&gt;&gt;Forager: sniff_data(urls)\n    Forager--&gt;&gt;Orchestrator: raw_data\n    Orchestrator-&gt;&gt;AIRegenerator: analyze_content(raw_data, prompt)\n    AIRegenerator--&gt;&gt;Orchestrator: analysis_results\n    Orchestrator-&gt;&gt;Visualizer: generate_visualizations(analysis_results)\n    Visualizer--&gt;&gt;Orchestrator: visualizations\n    Orchestrator-&gt;&gt;Orchestrator: generate_website(analysis_results, visualizations)\n    Orchestrator--&gt;&gt;User: final_results\n</code></pre>"},{"location":"api/orchestrator/#error-handling","title":"Error Handling","text":"<p>The Orchestrator uses a robust error handling system:</p> <ol> <li>Individual component errors are logged and don't halt the entire process</li> <li>If a critical error occurs, an exception is raised with detailed information</li> <li>Timeouts are implemented to prevent indefinite hanging</li> </ol>"},{"location":"api/orchestrator/#performance-considerations","title":"Performance Considerations","text":"<ul> <li>The Orchestrator uses asynchronous programming for improved performance</li> <li>Caching is employed to reduce redundant processing</li> <li>Consider using the <code>max_concurrency</code> parameter to control resource usage</li> </ul>"},{"location":"api/orchestrator/#next-steps","title":"Next Steps","text":"<p>Explore the Forager API to understand the web scraping process in detail.</p>"},{"location":"features/ai-analysis/","title":"AI Analysis","text":"<p>MacScrape leverages Claude 3.5 Sonnet, a state-of-the-art AI model, to provide deep insights into the scraped web content.</p>"},{"location":"features/ai-analysis/#key-capabilities","title":"Key Capabilities","text":"<ul> <li>Content Summarization: Distill long articles into concise summaries</li> <li>Sentiment Analysis: Determine the overall tone and emotion of the content</li> <li>Key Point Extraction: Identify the most important points in the text</li> <li>Topic Classification: Categorize content into predefined or emergent topics</li> <li>Language Translation: Translate content between multiple languages</li> <li>Question Answering: Extract specific information from the content</li> </ul>"},{"location":"features/ai-analysis/#ai-analysis-process","title":"AI Analysis Process","text":"<pre><code>sequenceDiagram\n    participant Scraper\n    participant Preprocessor\n    participant Claude\n    participant Postprocessor\n    participant Results\n\n    Scraper-&gt;&gt;Preprocessor: Raw HTML content\n    Preprocessor-&gt;&gt;Claude: Cleaned text\n    Claude-&gt;&gt;Postprocessor: AI analysis output\n    Postprocessor-&gt;&gt;Results: Structured insights\n</code></pre>"},{"location":"features/ai-analysis/#configuration-options","title":"Configuration Options","text":"Option Description Default analysis_depth Depth of analysis (basic, detailed, comprehensive) detailed language Primary language for analysis en custom_prompts User-defined prompts for specific analyses None"},{"location":"features/ai-analysis/#usage-example","title":"Usage Example","text":"<pre><code>from mac_scrape import AIAnalyzer\n\nanalyzer = AIAnalyzer(analysis_depth=\"comprehensive\")\ncontent = \"Your long article text here...\"\nresults = analyzer.analyze(content)\n\nprint(f\"Summary: {results.summary}\")\nprint(f\"Sentiment: {results.sentiment}\")\nprint(\"Key Points:\")\nfor point in results.key_points:\n    print(f\"- {point}\")\n</code></pre>"},{"location":"features/ai-analysis/#performance-comparison","title":"Performance Comparison","text":"<p>Comparison of Claude 3.5 Sonnet with other AI models:</p> <pre><code>graph TD\n    A[AI Models]\n    A --&gt; B[Claude 3.5 Sonnet]\n    A --&gt; C[GPT-4]\n    A --&gt; D[BERT]\n\n    B --&gt; E[Accuracy: 95%]\n    B --&gt; F[Speed: Fast]\n    B --&gt; G[Versatility: High]\n\n    C --&gt; H[Accuracy: 94%]\n    C --&gt; I[Speed: Medium]\n    C --&gt; J[Versatility: High]\n\n    D --&gt; K[Accuracy: 90%]\n    D --&gt; L[Speed: Very Fast]\n    D --&gt; M[Versatility: Medium]\n</code></pre>"},{"location":"features/ai-analysis/#best-practices","title":"Best Practices","text":"<ol> <li>Use specific, well-crafted prompts for best results</li> <li>Balance between analysis depth and processing time</li> <li>Regularly update the AI model to the latest version</li> <li>Implement error handling for AI timeouts or failures</li> </ol>"},{"location":"features/ai-analysis/#ethical-considerations","title":"Ethical Considerations","text":"<ul> <li>Ensure compliance with content copyright and usage rights</li> <li>Be transparent about AI usage in your application</li> <li>Implement bias detection and mitigation strategies</li> </ul>"},{"location":"features/ai-analysis/#next-steps","title":"Next Steps","text":"<p>Learn how to visualize the AI analysis results in the Data Visualization section.</p>"},{"location":"features/data-visualization/","title":"Data Visualization","text":"<p>MacScrape offers powerful data visualization capabilities to help you understand and present the insights gathered from web scraping and AI analysis.</p>"},{"location":"features/data-visualization/#visualization-types","title":"Visualization Types","text":"<ol> <li> <p>Word Clouds</p> </li> <li> <p>Represent frequency of terms in the content</p> </li> <li>Customize colors, fonts, and shapes</li> <li> <p>Interactive: click on words to see context</p> </li> <li> <p>Sentiment Graphs</p> </li> <li> <p>Show sentiment trends over time or across pages</p> </li> <li>Use color gradients to represent sentiment intensity</li> <li> <p>Overlay multiple sentiment dimensions (e.g., positivity, anger, fear)</p> </li> <li> <p>Topic Clustering</p> </li> <li> <p>Visualize relationships between different topics</p> </li> <li>Interactive force-directed graphs</li> <li> <p>Adjust clustering algorithms (e.g., k-means, hierarchical)</p> </li> <li> <p>Network Graphs</p> </li> <li> <p>Display link structures between web pages</p> </li> <li>Highlight important nodes and edges</li> <li> <p>Zoom and pan for large-scale networks</p> </li> <li> <p>Heatmaps</p> </li> <li> <p>Highlight areas of interest or engagement on web pages</p> </li> <li>Overlay heatmaps on actual webpage screenshots</li> <li> <p>Adjustable color scales and thresholds</p> </li> <li> <p>Time Series Charts</p> </li> <li>Track changes in metrics over time</li> <li>Support for multiple chart types (line, area, bar)</li> <li>Customizable date ranges and aggregation levels</li> </ol>"},{"location":"features/data-visualization/#visualization-process","title":"Visualization Process","text":"<pre><code>graph TD\n    A[Raw Data] --&gt; B[Data Processing]\n    B --&gt; C[Choose Visualization Type]\n    C --&gt; D[Generate Visualization]\n    D --&gt; E[Interactive Dashboard]\n    E --&gt; F[Export/Share]\n    B --&gt; G[Data Cleaning]\n    G --&gt; H[Feature Extraction]\n    H --&gt; C\n    D --&gt; I[Customize Appearance]\n    I --&gt; E\n    E --&gt; J[User Interaction]\n    J --&gt; K[Dynamic Updates]\n    K --&gt; E\n</code></pre>"},{"location":"features/data-visualization/#key-features","title":"Key Features","text":"<ol> <li> <p>Interactive Dashboards</p> </li> <li> <p>Create dynamic, clickable visualizations</p> </li> <li>Drill-down capabilities for detailed exploration</li> <li> <p>Real-time filtering and sorting</p> </li> <li> <p>Customizable Themes</p> </li> <li> <p>Adjust colors and styles to match your brand</p> </li> <li>Predefined themes for quick styling</li> <li> <p>Custom CSS support for advanced users</p> </li> <li> <p>Responsive Design</p> </li> <li> <p>Visualizations adapt to different screen sizes</p> </li> <li>Mobile-friendly touch interactions</li> <li> <p>Automatic layout adjustments for optimal viewing</p> </li> <li> <p>Real-time Updates</p> </li> <li> <p>Refresh data and visualizations automatically</p> </li> <li>Websocket support for live data streaming</li> <li> <p>Configurable update intervals</p> </li> <li> <p>Export Options</p> </li> <li>Save visualizations as high-resolution images (PNG, SVG)</li> <li>Export interactive HTML for embedding in web pages</li> <li>Generate PDF reports with multiple visualizations</li> </ol>"},{"location":"features/data-visualization/#advanced-features","title":"Advanced Features","text":""},{"location":"features/data-visualization/#1-ai-assisted-visualization-recommendations","title":"1. AI-Assisted Visualization Recommendations","text":"<p>MacScrape can analyze your data and suggest the most appropriate visualization types:</p> <pre><code>from mac_scrape import AIVisualizer\n\nai_viz = AIVisualizer()\nrecommendations = ai_viz.recommend_visualizations(your_data)\n\nfor viz_type, confidence in recommendations:\n    print(f\"Recommended: {viz_type} (Confidence: {confidence}%)\")\n</code></pre>"},{"location":"features/data-visualization/#2-custom-visualization-templates","title":"2. Custom Visualization Templates","text":"<p>Create and save your own visualization templates for reuse:</p> <pre><code>from mac_scrape import Visualizer, Template\n\nviz = Visualizer()\ntemplate = Template(\"My Custom Template\")\ntemplate.add_chart(\"sentiment_over_time\", chart_type=\"line\")\ntemplate.add_chart(\"topic_distribution\", chart_type=\"pie\")\n\nviz.apply_template(template, your_data)\nviz.save(\"custom_dashboard.html\")\n</code></pre>"},{"location":"features/data-visualization/#3-comparative-visualizations","title":"3. Comparative Visualizations","text":"<p>Easily compare data from multiple sources or time periods:</p> <pre><code>viz.create_comparison_chart(\n    data_set_1,\n    data_set_2,\n    metric=\"sentiment_score\",\n    chart_type=\"bar\"\n)\n</code></pre>"},{"location":"features/data-visualization/#performance-optimization","title":"Performance Optimization","text":"<p>To ensure smooth performance, even with large datasets:</p> <ol> <li>Use data sampling for initial renders of large datasets</li> <li>Implement progressive loading for time-series data</li> <li>Utilize WebGL for rendering complex visualizations</li> <li>Compress data transfers between client and server</li> </ol>"},{"location":"features/data-visualization/#accessibility-features","title":"Accessibility Features","text":"<p>MacScrape's visualizations are designed with accessibility in mind:</p> <ul> <li>Screen reader compatibility for all chart types</li> <li>Keyboard navigation support for interactive elements</li> <li>Color blind-friendly palettes and contrast options</li> <li>Text alternatives for complex visualizations</li> </ul>"},{"location":"features/data-visualization/#integration-with-external-tools","title":"Integration with External Tools","text":"<p>MacScrape supports integration with popular data visualization and business intelligence tools:</p> <ul> <li>Export data to Tableau format</li> <li>Generate Google Data Studio connectors</li> <li>Create embeddable visualizations for PowerBI</li> </ul>"},{"location":"features/data-visualization/#best-practices","title":"Best Practices","text":"<ol> <li>Choose the right visualization for your data type</li> <li>Use color effectively to highlight important information</li> <li>Avoid cluttering visualizations with unnecessary details</li> <li>Provide context and explanations for complex visualizations</li> <li>Ensure accessibility for users with visual impairments</li> <li>Test visualizations across different devices and screen sizes</li> <li>Use animation sparingly and purposefully</li> <li>Always include clear titles, labels, and legends</li> </ol>"},{"location":"features/data-visualization/#examples","title":"Examples","text":""},{"location":"features/data-visualization/#sentiment-analysis-over-time","title":"Sentiment Analysis Over Time","text":"<pre><code>from mac_scrape import Visualizer\n\ndata = [\n    {\"date\": \"2024-01-01\", \"sentiment\": 0.8},\n    {\"date\": \"2024-01-02\", \"sentiment\": -0.2},\n    {\"date\": \"2024-01-03\", \"sentiment\": 0.5},\n    # ... more data ...\n]\n\nviz = Visualizer()\nchart = viz.create_line_chart(\n    data,\n    x_field=\"date\",\n    y_field=\"sentiment\",\n    title=\"Sentiment Trend\"\n)\nchart.save(\"sentiment_trend.html\")\n</code></pre> <p>This will generate an interactive line chart showing sentiment changes over time.</p>"},{"location":"features/data-visualization/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter issues with visualizations:</p> <ol> <li>Check your data format and ensure it matches the expected input</li> <li>Verify that you have the latest version of MacScrape installed</li> <li>Clear your browser cache if embedded visualizations are not updating</li> <li>For performance issues, try reducing the data size or simplifying complex visualizations</li> </ol>"},{"location":"features/data-visualization/#next-steps","title":"Next Steps","text":"<p>Explore the API Reference to learn how to integrate these visualizations into your own applications. For advanced usage and custom visualizations, check out our Advanced Visualization Guide.</p>"},{"location":"features/web-scraping/","title":"Web Scraping","text":"<p>MacScrape's web scraping functionality is powered by our custom Forager module, which efficiently extracts data from websites.</p>"},{"location":"features/web-scraping/#key-features","title":"Key Features","text":"<ul> <li>Intelligent Crawling: Automatically follows relevant links</li> <li>Content Extraction: Pulls out main content, ignoring boilerplate</li> <li>Metadata Parsing: Extracts titles, descriptions, and other metadata</li> <li>JavaScript Rendering: Supports scraping of dynamic content</li> <li>Rate Limiting: Respects website's crawl rates to avoid overloading</li> </ul>"},{"location":"features/web-scraping/#scraping-process","title":"Scraping Process","text":"<pre><code>graph TD\n    A[URL Input] --&gt; B[Fetch Page]\n    B --&gt; C{Is JavaScript?}\n    C --&gt;|Yes| D[Render with Headless Browser]\n    C --&gt;|No| E[Parse HTML]\n    D --&gt; E\n    E --&gt; F[Extract Content]\n    F --&gt; G[Follow Links]\n    G --&gt; B\n    F --&gt; H[Store Data]\n</code></pre>"},{"location":"features/web-scraping/#configuration-options","title":"Configuration Options","text":"Option Description Default max_depth Maximum depth to crawl 3 follow_external Follow external links false respect_robots_txt Obey robots.txt rules true javascript_support Enable JavaScript rendering false"},{"location":"features/web-scraping/#usage-example","title":"Usage Example","text":"<pre><code>from mac_scrape import Forager\n\nforager = Forager(max_depth=2, javascript_support=True)\nresults = forager.crawl(\"https://example.com\")\n\nfor page in results:\n    print(f\"Title: {page.title}\")\n    print(f\"Content: {page.main_content[:100]}...\")  # First 100 chars\n</code></pre>"},{"location":"features/web-scraping/#performance-metrics","title":"Performance Metrics","text":"<p>Here's a comparison of MacScrape's Forager against other popular web scraping tools:</p> <pre><code>graph TD\n    A[Web Scraping Tools]\n    A --&gt; B[MacScrape Forager]\n    A --&gt; C[BeautifulSoup]\n    A --&gt; D[Scrapy]\n\n    B --&gt; E[Speed: 8/10]\n    B --&gt; F[Ease of Use: 9/10]\n    B --&gt; G[Features: 9/10]\n\n    C --&gt; H[Speed: 6/10]\n    C --&gt; I[Ease of Use: 10/10]\n    C --&gt; J[Features: 7/10]\n\n    D --&gt; K[Speed: 10/10]\n    D --&gt; L[Ease of Use: 7/10]\n    D --&gt; M[Features: 10/10]\n</code></pre>"},{"location":"features/web-scraping/#best-practices","title":"Best Practices","text":"<ol> <li>Always respect the website's <code>robots.txt</code> file</li> <li>Implement proper error handling for network issues</li> <li>Use caching to avoid unnecessary repeated requests</li> <li>Regularly update your user agent string</li> </ol>"},{"location":"features/web-scraping/#next-steps","title":"Next Steps","text":"<p>Explore how MacScrape uses AI to analyze the scraped data in the AI Analysis section.</p>"},{"location":"user-guide/configuration/","title":"Contributing to MacScrape","text":"<p>We welcome contributions to MacScrape! This document provides guidelines for contributing to the project.</p>"},{"location":"user-guide/configuration/#getting-started","title":"Getting Started","text":"<ol> <li>Fork the repository on GitHub</li> <li>Clone your fork locally</li> <li>Set up the development environment</li> </ol> <pre><code>    git clone https://github.com/amacsmith/mac-scrape.git\n    cd mac-scrape\n    pip install -r requirements.txt\n    pip install -r requirements-dev.txt\n</code></pre>"},{"location":"user-guide/configuration/#development-workflow","title":"Development Workflow","text":"<ol> <li>Create a new branch for your feature or bugfix</li> <li>Make your changes</li> <li>Write or update tests</li> <li>Run the test suite</li> <li>Submit a pull request</li> </ol> <pre><code>    git checkout -b feature-or-bugfix-name\n    # Make your changes\n    pytest\n    git push origin feature-or-bugfix-name\n</code></pre>"},{"location":"user-guide/configuration/#coding-standards","title":"Coding Standards","text":"<p>We follow PEP 8 for Python code style. Use <code>black</code> for code formatting and <code>flake8</code> for linting.</p> <pre><code>    black .\n    flake8\n</code></pre>"},{"location":"user-guide/configuration/#commit-messages","title":"Commit Messages","text":"<p>Follow the Conventional Commits specification:</p> <pre><code>    &lt;type&gt;[optional scope]: &lt;description&gt;\n\n    [optional body]\n\n    [optional footer(s)]\n</code></pre> <p>Example:</p> <pre><code>    feat(scraper): add support for JavaScript rendering\n\n    This commit adds Playwright integration to render JavaScript-heavy pages\n    before scraping.\n\n    Closes #123\n</code></pre>"},{"location":"user-guide/configuration/#pull-request-process","title":"Pull Request Process","text":"<ol> <li>Ensure your code adheres to the project's coding standards</li> <li>Update the documentation if you're adding or changing features</li> <li>Add or update tests to cover your changes</li> <li>Ensure all tests pass</li> <li>Update the CHANGELOG.md file</li> <li>Submit the pull request with a clear title and description</li> </ol>"},{"location":"user-guide/configuration/#reporting-bugs","title":"Reporting Bugs","text":"<p>Use the GitHub issue tracker to report bugs. Include:</p> <ul> <li>A clear, descriptive title</li> <li>A detailed description of the issue</li> <li>Steps to reproduce the problem</li> <li>Expected behavior</li> <li>Actual behavior</li> <li>MacScrape version and environment details</li> </ul>"},{"location":"user-guide/configuration/#requesting-features","title":"Requesting Features","text":"<p>Feature requests are welcome. Use the GitHub issue tracker and include:</p> <ul> <li>A clear, descriptive title</li> <li>A detailed description of the proposed feature</li> <li>Any relevant examples or use cases</li> <li>Potential drawbacks or challenges</li> </ul>"},{"location":"user-guide/configuration/#code-of-conduct","title":"Code of Conduct","text":"<p>This project adheres to the Contributor Covenant Code of Conduct. By participating, you are expected to uphold this code.</p>"},{"location":"user-guide/configuration/#contribution-workflow","title":"Contribution Workflow","text":"<pre><code>    graph TD\n        A[Fork Repository] --&gt; B[Clone Locally]\n        B --&gt; C[Create Feature Branch]\n        C --&gt; D[Make Changes]\n        D --&gt; E[Run Tests]\n        E --&gt; F{Tests Pass?}\n        F --&gt;|Yes| G[Commit Changes]\n        F --&gt;|No| D\n        G --&gt; H[Push to Fork]\n        H --&gt; I[Create Pull Request]\n</code></pre>"},{"location":"user-guide/installation/","title":"Installation Guide","text":"<p>This guide will walk you through the process of installing MacScrape Web Analyzer on your system.</p>"},{"location":"user-guide/installation/#system-requirements","title":"System Requirements","text":"<ul> <li>Python 3.8 or higher</li> <li>4GB RAM (8GB recommended for large-scale crawling)</li> <li>1GB free disk space</li> </ul>"},{"location":"user-guide/installation/#installation-steps","title":"Installation Steps","text":"<ol> <li>Ensure you have Python installed:</li> </ol> <pre><code>python --version\n</code></pre> <p>If Python is not installed, download it from python.org.</p> <ol> <li>Install MacScrape using pip:</li> </ol> <pre><code>pip install mac-scrape\n</code></pre> <ol> <li>Verify the installation:</li> </ol> <pre><code>mac-scrape --version\n</code></pre>"},{"location":"user-guide/installation/#configuration","title":"Configuration","text":"<p>After installation, you need to set up your API keys:</p> <ol> <li>Create a <code>.env</code> file in your project root:</li> </ol> <pre><code>touch .env\n</code></pre> <ol> <li>Add your API keys to the <code>.env</code> file:</li> </ol> <pre><code>ANTHROPIC_API_KEY=your_api_key_here\n</code></pre>"},{"location":"user-guide/installation/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter any issues during installation, try the following:</p> <ol> <li>Upgrade pip:</li> </ol> <pre><code>pip install --upgrade pip\n</code></pre> <ol> <li>If you're behind a proxy, use:</li> </ol> <pre><code>pip install mac-scrape --proxy http://user:password@proxyserver:port\n</code></pre> <p>For more help, check our FAQ or open an issue.</p>"},{"location":"user-guide/installation/#next-steps","title":"Next Steps","text":"<p>Once installed, head over to the Configuration guide to set up MacScrape for your specific needs.</p>"},{"location":"user-guide/local-ai-integration/","title":"Using MacScrape with Local AI Models on LM Studio","text":"<p>MacScrape can be integrated with local AI models using LM Studio, providing an alternative to cloud-based AI services. This guide will walk you through the process, options, benefits, and considerations.</p>"},{"location":"user-guide/local-ai-integration/#what-is-lm-studio","title":"What is LM Studio?","text":"<p>LM Studio is a tool that allows you to run AI language models locally on your computer. It supports various open-source models and provides an API similar to OpenAI's, making it easier to integrate with existing applications.</p>"},{"location":"user-guide/local-ai-integration/#integration-options","title":"Integration Options","text":""},{"location":"user-guide/local-ai-integration/#1-direct-api-integration","title":"1. Direct API Integration","text":"<p>MacScrape can be configured to use LM Studio's API instead of cloud-based services.</p> <pre><code>from mac_scrape import AIRegenerator\nfrom lmstudio_client import LMStudioClient\n\nclass LocalAIRegenerator(AIRegenerator):\n    def __init__(self, model_name, api_base_url):\n        self.client = LMStudioClient(api_base_url)\n        self.model_name = model_name\n\n    async def analyze_content(self, data, prompt=None):\n        # Implement the analysis using LM Studio's API\n        response = await self.client.completions.create(\n            model=self.model_name,\n            prompt=prompt,\n            max_tokens=1000\n        )\n        return response.choices[0].text\n\n# Usage\nlocal_ai = LocalAIRegenerator(\"local_model_name\", \"http://localhost:1234/v1\")\nresults = await local_ai.analyze_content(data, prompt)\n</code></pre>"},{"location":"user-guide/local-ai-integration/#2-model-switching","title":"2. Model Switching","text":"<p>Implement a strategy to switch between local and cloud-based models based on availability or specific requirements.</p> <pre><code>class HybridAIRegenerator(AIRegenerator):\n    def __init__(self, cloud_api_key, local_api_base_url):\n        self.cloud_ai = CloudAIRegenerator(cloud_api_key)\n        self.local_ai = LocalAIRegenerator(\"local_model\", local_api_base_url)\n\n    async def analyze_content(self, data, prompt=None, use_local=False):\n        if use_local:\n            return await self.local_ai.analyze_content(data, prompt)\n        else:\n            return await self.cloud_ai.analyze_content(data, prompt)\n\n# Usage\nhybrid_ai = HybridAIRegenerator(\"cloud_api_key\", \"http://localhost:1234/v1\")\nresults = await hybrid_ai.analyze_content(data, prompt, use_local=True)\n</code></pre>"},{"location":"user-guide/local-ai-integration/#configuration-options","title":"Configuration Options","text":"<ol> <li>Model Selection: Choose from various open-source models available in LM Studio.</li> <li>API Endpoint: Configure the local API endpoint (usually <code>http://localhost:1234/v1</code>).</li> <li>Performance Settings: Adjust batch size, max tokens, and other parameters to balance speed and quality.</li> <li>Fallback Strategy: Set up automatic fallback to cloud services if local processing fails.</li> </ol>"},{"location":"user-guide/local-ai-integration/#benefits","title":"Benefits","text":"<ol> <li>Privacy: Data remains on your local machine, reducing privacy concerns.</li> <li>Cost-effective: No usage fees for API calls to cloud services.</li> <li>Customization: Flexibility to fine-tune models for specific use cases.</li> <li>Offline Usage: Analyze content without an internet connection.</li> <li>Learning Opportunity: Gain hands-on experience with AI model deployment and management.</li> </ol>"},{"location":"user-guide/local-ai-integration/#drawbacks","title":"Drawbacks","text":"<ol> <li>Hardware Requirements: Local models require significant computational resources, especially for larger models.</li> <li>Setup Complexity: Initial setup and model management can be more complex than using cloud services.</li> <li>Limited Model Options: Some advanced models may not be available or practical to run locally.</li> <li>Maintenance: Regular updates and optimizations are necessary to keep the local setup current.</li> <li>Scalability: May be challenging to scale for high-volume processing compared to cloud solutions.</li> </ol>"},{"location":"user-guide/local-ai-integration/#performance-considerations","title":"Performance Considerations","text":"<pre><code>graph TD\n    A[Input Data] --&gt; B{Local or Cloud?}\n    B --&gt;|Local| C[LM Studio]\n    B --&gt;|Cloud| D[Cloud AI Service]\n    C --&gt; E[Local Processing]\n    D --&gt; F[Cloud Processing]\n    E --&gt; G[Results]\n    F --&gt; G\n    G --&gt; H[MacScrape Analysis]\n</code></pre> <ul> <li>Local processing speed depends on your hardware capabilities.</li> <li>Larger models may provide better results but require more resources.</li> <li>Consider using smaller, optimized models for faster processing on less powerful machines.</li> </ul>"},{"location":"user-guide/local-ai-integration/#best-practices","title":"Best Practices","text":"<ol> <li>Model Selection: Choose models that balance performance and resource requirements for your specific use case.</li> <li>Regular Updates: Keep LM Studio and your local models up to date for best performance and security.</li> <li>Hybrid Approach: Use local models for sensitive data and cloud services for non-sensitive, high-volume tasks.</li> <li>Monitoring: Implement logging and monitoring to track performance and issues with local AI processing.</li> <li>Fallback Mechanism: Implement a fallback to cloud services in case of local processing failures or unavailability.</li> </ol>"},{"location":"user-guide/local-ai-integration/#example-configuring-macscrape-for-local-ai","title":"Example: Configuring MacScrape for Local AI","text":"<p>Update your MacScrape configuration to use the local AI:</p> <pre><code># config.yaml\nai_integration:\n  type: local\n  model_name: llama2-7b-chat\n  api_base_url: http://localhost:1234/v1\n  fallback_to_cloud: true\n  cloud_api_key: your_cloud_api_key_here\n</code></pre> <p>This configuration tells MacScrape to primarily use the local Llama 2 7B model through LM Studio, with a fallback to cloud services if needed.</p>"},{"location":"user-guide/local-ai-integration/#conclusion","title":"Conclusion","text":"<p>Integrating MacScrape with local AI models via LM Studio offers enhanced privacy and potential cost savings, at the expense of some additional complexity and hardware requirements. By carefully considering your specific needs and resources, you can leverage the power of local AI processing while maintaining the flexibility to use cloud services when necessary.</p>"},{"location":"user-guide/usage/","title":"Usage Guide","text":"<p>This guide provides instructions on how to use MacScrape Web Analyzer effectively.</p>"},{"location":"user-guide/usage/#basic-usage","title":"Basic Usage","text":"<p>To analyze a single website:</p> <pre><code>mac-scrape analyze https://example.com\n</code></pre> <p>To analyze multiple websites:</p> <pre><code>mac-scrape analyze https://example.com https://another-example.com\n</code></pre>"},{"location":"user-guide/usage/#advanced-usage","title":"Advanced Usage","text":""},{"location":"user-guide/usage/#custom-analysis-depth","title":"Custom Analysis Depth","text":"<p>Specify the analysis depth:</p> <pre><code>mac-scrape analyze --depth detailed https://example.com\n</code></pre>"},{"location":"user-guide/usage/#output-formatting","title":"Output Formatting","text":"<p>Save results in a specific format:</p> <pre><code>mac-scrape analyze --output json https://example.com\n</code></pre>"},{"location":"user-guide/usage/#concurrent-crawling","title":"Concurrent Crawling","text":"<p>Set the number of concurrent connections:</p> <pre><code>mac-scrape analyze --concurrent 20 https://example.com\n</code></pre>"},{"location":"user-guide/usage/#analysis-workflow","title":"Analysis Workflow","text":"<pre><code>sequenceDiagram\n    participant User\n    participant MacScrape\n    participant Website\n    participant Claude\n\n    User-&gt;&gt;MacScrape: Initiate analysis\n    MacScrape-&gt;&gt;Website: Crawl pages\n    Website--&gt;&gt;MacScrape: Return HTML content\n    MacScrape-&gt;&gt;Claude: Send content for analysis\n    Claude--&gt;&gt;MacScrape: Return analysis results\n    MacScrape-&gt;&gt;User: Present results\n</code></pre>"},{"location":"user-guide/usage/#interpreting-results","title":"Interpreting Results","text":"<p>MacScrape provides a comprehensive analysis of the crawled websites. Here's how to interpret the results:</p> <ol> <li>Content Summary: Overview of the website's main topics and themes.</li> <li>Key Insights: Important points extracted from the content.</li> <li>Sentiment Analysis: Overall tone of the website (positive, negative, neutral).</li> <li>SEO Recommendations: Suggestions for improving search engine optimization.</li> <li>Data Visualizations: Graphs and charts representing various aspects of the analysis.</li> </ol>"},{"location":"user-guide/usage/#example-output","title":"Example Output","text":"<pre><code>{\n  \"url\": \"https://example.com\",\n  \"summary\": \"E-commerce website selling electronics\",\n  \"key_insights\": [\n    \"Wide range of products\",\n    \"Competitive pricing\",\n    \"User-friendly interface\"\n  ],\n  \"sentiment\": \"Positive\",\n  \"seo_recommendations\": [\n    \"Improve meta descriptions\",\n    \"Increase internal linking\"\n  ]\n}\n</code></pre>"},{"location":"user-guide/usage/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter issues:</p> <ol> <li>Check your internet connection</li> <li>Verify your API keys in the <code>.env</code> file</li> <li>Ensure the target website is accessible</li> <li>Check the logs: <code>mac-scrape logs</code></li> </ol> <p>For more help, consult our FAQ or open an issue.</p>"},{"location":"user-guide/usage/#next-steps","title":"Next Steps","text":"<p>Explore the Features section to learn about MacScrape's capabilities in detail.</p>"}]}